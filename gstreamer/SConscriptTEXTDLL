# The environment is not passed here, checking for root library
from init_env import init_environment
import os










env = init_environment('glibrary geant4 clhep')

# standard pre and suffix for gemc plugins and path
env.Replace(SHLIBSUFFIX = ".gplugin")
env.Replace(SHLIBPREFIX = "")
plugins_dir_s   = os.environ.get('GPLUGIN_PATH')
plugins_dir     = os.path.realpath(plugins_dir_s)
plugin_output   =  plugins_dir  + '/' + 'gstreamerTEXTFactory'

env.Append(CXXFLAGS=['-std=c++20'])
env.Append(CPPPATH = [Dir('factories/TEXT')])

# needed for the plugin so we can use install_name_tool to change path for DMG installation
env.Append(SHLINKFLAGS=['-headerpad_max_install_names'])

plugin_sources = [
				  'factories/TEXT/gstreamerTEXTFactory.cc',
				  'factories/TEXT/gstreamerTEXTConnection.cc',
				  'factories/TEXT/event/event.cc',
				  'factories/TEXT/event/eventHeader.cc',
				  'factories/TEXT/event/publishTrueInfo.cc',
				  'factories/TEXT/event/publishDigitized.cc',
				  'factories/TEXT/stream/stream.cc',
				  'factories/TEXT/stream/frameHeader.cc',
				  'factories/TEXT/stream/publishPayload.cc'
				  ]


# notice: these two libraries needs to be added explicitly, with also the dependency below,
# as the env scanner may run at a time where the libraries are not built yet
env.Append(LIBS = ['gdata', 'guts'])

# destination library is one dir up - relative to this SConscript
text_dll = env.SharedLibrary(source = plugin_sources, target = plugin_output)
Requires(text_dll, '../lib/libgdata.a')
Requires(text_dll, '../lib/libtextProgressBar.a')
Requires(text_dll, '../lib/libgsystem.a')
