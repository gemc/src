# Build & Publish GitHub Container Registry (GHCR) Images
name: GHCR Images

on:
  push:
    branches: [ main ]     # publish on main updates
    tags:     [ 'v*' ]     # (optional) also publish on repo tags
  pull_request:            # PRs: build only (no push)

concurrency:
  group: ghcr-${{ github.ref }}   # cancel older runs on same ref
  cancel-in-progress: true

jobs:
  discover:
    name: Discover Dockerfiles
    runs-on: ubuntu-latest
    # Expose the step outputs to downstream jobs
    outputs:
      matrix: ${{ steps.scan.outputs.matrix }}
      image:  ${{ steps.scan.outputs.image }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # Run the zsh discovery script which writes to $GITHUB_OUTPUT:
      #   - matrix: JSON {"include":[{file,tag,os,latest},...]}
      #   - image : "ghcr.io/<owner>/gemc"
      - id: scan
        name: Build matrix
        run: ci/discover-docker-matrix.zsh

  build:
    name: Build ${{ matrix.tag }} on ${{ matrix.os }}
    needs: discover
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write    # needed to push to GHCR
    strategy:
      fail-fast: false
      # Use the JSON produced by the discover job
      matrix: ${{ fromJSON(needs.discover.outputs.matrix) }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # Enable emulation so we can build for both amd64 & arm64 on x86 runners
      - name: Enable QEMU
        uses: docker/setup-qemu-action@v3

      # Set up Buildx builder (required for multi-arch + cache)
      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3

      # Auth to GHCR using GITHUB_TOKEN (no secret PAT needed)
      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Create the final tag list:
      #   - gemc-<tag>-<os> (always)
      #   - gemc-latest-<os> (only for the "latest" per-OS candidate)
      - id: meta
        name: Generate tags & labels
        uses: docker/metadata-action@v5
        with:
          images: ${{ needs.discover.outputs.image }}
          tags: |
            type=raw,value=gemc-${{ matrix.tag }}-${{ matrix.os }}
            type=raw,value=gemc-latest-${{ matrix.os }},enable=${{ matrix.latest }}
          labels: |
            org.opencontainers.image.source=${{ github.repository }}
            org.opencontainers.image.description=GEMC image (${{ matrix.tag }} on ${{ matrix.os }})

      # Build on PRs; Build+Push on main/tags; publish multi-arch manifest to GHCR
      - name: Build (PR) or Build+Push (main/tags)
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ${{ matrix.file }}
          platforms: linux/amd64,linux/arm64   # ‚Üê multi-arch; change to linux/amd64 if you prefer single-arch
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
