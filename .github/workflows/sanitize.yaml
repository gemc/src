name: Sanitize
permissions:
  contents: read
  pull-requests: write

# Controls when the workflow will run
on:
  # Triggers the workflow on all pushes
  push:
    branches:
      - '*'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build-with-sanitizer:
    strategy:
      # max-parallel: 4
      matrix:
        container:
          - name: ubuntu24
            image: jeffersonlab/geant4:g4v11.3.1-ubuntu24
          - name: fedora40
            image: jeffersonlab/geant4:g4v11.3.1-fedora40
          - name: almalinux94
            image: jeffersonlab/geant4:g4v11.3.1-almalinux94
        # NOTE: additional packages needed for the sanitizer: libasan libubsan libtsan
        # MacOS: address, thread, undefined
        # Linux: address, hwaddress, leak, undefined, integer, thread, cfi, kcfi, shadowcallstack
        sanitize: [ none, address, hwaddress, leak, undefined, integer, thread, cfi, kcfi, shadowcallstack ]
    runs-on: ubuntu-latest
    continue-on-error: true
    container: ${{ matrix.container.image }}
    name: ${{ matrix.container.name }}-${{ matrix.sanitize }}

    steps:
      - name: Checkout
        uses: actions/checkout@main
      - name: Fix Ownership
        run: |
          # recent versions of Git refuse to touch a repository whose on-disk owner 
          # doesnâ€™t match the UID that is running the command
          # mark the workspace (and any nested path) as safe
          git config --global --add safe.directory "$GITHUB_WORKSPACE"
          git config --global --add safe.directory "$GITHUB_WORKSPACE"/src
      - name: Build ${{ matrix.sanitize }}
        run: |
          ./ci/build.sh ${{ matrix.sanitize }}

  build_with_sanitizert-final:
    needs:
      - build-with-sanitizer
    runs-on: ubuntu-latest
    steps:
      - name: fail
        if: ${{ contains(needs.*.result, 'failure') || contains(needs.*.result, 'cancelled') || contains(needs.*.result, 'skipped') }}
        run: |
          echo "### Some tests failed." >> $GITHUB_STEP_SUMMARY
          exit 1
      - name: pass
        run: |
          echo "### All tests passed." >> $GITHUB_STEP_SUMMARY
          exit 0
