# Put all these in gemc3 project

working on gemc:


- nthreads not working?
- add system/detector browser
- add hipo output
- do we need gFieldManager.clearDLMap(); ?
- any level of optimization higher than 0 cause some exit failure?


In General:

- event reproducibility: write random engine status in output stream
- rule of 5.
- examples/advanced/doiPET/README
- add display goodies like gemc2++


Gemc Details:

- catalogue exit codes across libraries: find in project #define ERR_
- use gConstruct gDestruct;
- later down the road: compare map vs unordered_map speed and memory usage.
- gopts must be shared ptr so it can be used in the local threads
- account for detector dependencies: for example cadbeamline needs fc
- streamData instead of EventData. How to organize this?
- check examples for new GHitsCollection(sdName, collectionName[0]) in which perhaps there are multiple hit collections and collectionName[1] is used
- if decisionToSkipHit, return true or false? check examples?
- go over text colors and style in the output


- checkout fun4all tutorial:
  - https://eic-detector.github.io/tutorials_example2_JLab.html
