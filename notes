- add frameworks and libraries by dragging it into "Frameworks" directory.
  * frameworks can be embedded in binary (products destination) to run it on the build, uncheck copy only when installing
  * libraryies can be copied to products destination (no subpath) to run it on the build, uncheck copy only when installing

 - if problems with plugin "cocoa":
   * can set QT_DEBUG_PLUGINS to 1 in the env variables for more debugging
   * can set QT_PLUGIN_PATH to plugin locations (cocoa plugin is under platforms there), currently /opt/jlab_software/2.4/Darwin_macosx10.15-clang12.0.0/qt/system/clang_64/plugins


Geant4 Environment:

echo " \
G4LEDATA           $G4LEDATA \
G4LEVELGAMMADATA   $G4LEVELGAMMADATA \
G4NEUTRONHPDATA    $G4NEUTRONHPDATA \
G4PIIDATA          $G4PIIDATA \
G4RADIOACTIVEDATA  $G4RADIOACTIVEDATA \
G4REALSURFACEDATA  $G4REALSURFACEDATA \
G4SAIDXSDATA       $G4SAIDXSDATA \
G4ABLADATA         $G4ABLADATA \
G4ENSDFSTATEDATA   $G4ENSDFSTATEDATA \
G4PARTICLEXSDATA   $G4PARTICLEXSDATA
"

not defined?
G4NEUTRONXSDATA    $G4NEUTRONXSDATA \

# get libs
open $QTDIR/lib
open $GLIBRARY/lib/
open $CLHEP_BASE_DIR/lib/
open $XERCESCROOT/lib/
open $G4ROOT/$GEANT4_VERSION/lib/


GEMC 3 reminders:

1. set MT option in go_geant4

 Pre-processor
 Found with scons SHOWBUILD=1
 Can paste in one line in Build Settings - preprocessor macro.
 For example G4MULTITHREADED will change the meaning of G4cout (will use G4cout_p instead)
 -DG4OPTIMISE -DG4_STORE_TRAJECTORY -DG4VIS_USE_OPENGL -DG4UI_USE_TCSH -DG4INTY_USE_QT  -DG4UI_USE_QT -DG4VIS_USE_OPENGLQT -DG4USE_STD11 -DG4MULTITHREADED
   G4OPTIMISE=1 G4_STORE_TRAJECTORY=1 G4VIS_USE_OPENGL=1 G4UI_USE_TCSH=1 G4INTY_USE_QT=1  G4UI_USE_QT=1 G4VIS_USE_OPENGLQT=1 G4USE_STD11=1 G4MULTITHREADED=1

GEMC

 Code conventions
 - camel case for all variable names, class definitions
 - type definitions start with Capital Letter
 - instances start with lowercase letter
 - shared variables should contain "shared" / "global" in the name
 - thread-local variable should contain "local" / "tlocal" / "thread"
 - source filenames starts with Capital letters << maybe not



# Xcode testing

See https://hiltmon.com/blog/2019/02/09/testing-c-plus-plus-17-project-in-xcode-with-xctest/



## The rule of three:

If you need to explicitly declare either the destructor, copy constructor or copy assignment operator yourself,
you probably need to explicitly declare all three of them.
From C++11 on, an object has 2 extra special member functions: the move constructor and move assignment.
The rule of five states to implement these functions as well.

class person
{
    std::string name;
    int age;

public:
    person(const std::string& name, int age);        // Ctor
    person(const person &) = default;                // 1/5: Copy Ctor
    person(person &&) noexcept = default;            // 4/5: Move Ctor
    person& operator=(const person &) = default;     // 2/5: Copy Assignment
    person& operator=(person &&) noexcept = default; // 5/5: Move Assignment
    ~person() noexcept = default;                    // 3/5: Dtor
};





## Color on the output

- can be seen with

cat
less if LESS is set: export LESS=-Xr
grep




In general from scratch:

1. new project
2. remove project file from folder, put one dir up
3. add settings.xconfig to project settings debug and release
4. target: add library or command line executable, remove dirs/files created, add files to build phases manually
5. select GNU++17
